#include <iostream>

using namespace std;

typedef struct __Point{
    int xpos;
    int ypos;
} Point;

Point& PntAdder(const Point &p1, const Point &p2){
    Point *pptr = new Point; //구조체 포인터 선언, 힙영역에 메모리 할당. 함수 외부에 있는 구조체 변수에 직접 접근하기 위해 구조체 포인터를 씀.

    pptr->xpos = p1.xpos + p2.xpos; //구조체 포인터의 멤버에 접근할 땐 ->를 사용 (*pptr).age와 같은 의미
    pptr->ypos = p1.ypos + p2.ypos;

    return *pptr;
}

int main() {
    Point *ptr1 = new Point;
    Point *ptr2 = new Point;

    ptr1->xpos = 3;
    ptr1->ypos = 30;

    ptr2->xpos = 1;
    ptr2->ypos = 10;

    Point &pref = PntAdder(*ptr1, *ptr2); //구조체 참조자. pntAdder에서 받은 구조체 포인터에 참조자를 만들어 쉽게 접근 가능하게 하기.
    cout << "[" << pref.xpos << ", " << pref.ypos << "]";

    delete ptr1;
    delete ptr2;
    delete &pref;

    return 0;
}
